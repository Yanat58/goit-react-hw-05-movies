{"version":3,"file":"static/js/618.1fcd285b.chunk.js","mappings":"6PAAMA,EAAM,gCACNC,EAAM,yDAEGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,kGAE2BC,MAAM,GAAD,OAAIJ,EAAJ,iBAAgBG,EAAhB,4BAAsCF,IAFtE,cAEUI,EAFV,gBAGuBA,EAASC,OAHhC,cAGUC,EAHV,yBAIWA,GAJX,kCAMIC,QAAQC,IAAI,KAAMC,SANtB,iFAUA,MAZA,SAEyB,GAAVR,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,kECFf,EAA6B,yBAA7B,EAAgE,sBAAhE,EAAkG,wBAAlG,EAAwI,0BAAxI,EAAgL,0BAAhL,EAAuN,yBAAvN,EAA8P,0BAA9P,EAA2S,+BAA3S,EAAuV,yB,SCmEvV,EA5Da,WACX,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAGMZ,GADSa,EAAAA,EAAAA,MACGC,QAmBlB,OAjBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAEbb,EAAUC,GACPgB,MAAK,YAAe,IAAZP,EAAW,EAAXA,KACPA,EAAKQ,KAAI,kBAAiD,CACxDC,UADO,EAAGA,UAEVC,cAFO,EAAcA,cAGrBC,aAHO,EAA6BA,aAA7B,IAMTV,EAAQD,EACT,IACAY,OAAM,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,MAAYD,EAAMf,QAAS,wBAA/B,IACXiB,SAAQ,kBAAMZ,GAAa,EAAnB,GACZ,GAAE,CAACZ,KAGF,gBAAKyB,UAAWC,EAAhB,UACE,qBAASD,UAAWC,EAApB,UACGjB,GAAQA,EAAKkB,OAAS,GACrB,eAAIF,UAAWC,EAAf,gBACGjB,QADH,IACGA,OADH,EACGA,EAAMQ,KAAI,WAA6CW,GAAW,IAArDV,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,aACtC,OACE,gBAAIK,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXG,IACET,EAAY,yCAC0BA,GAClCU,EAENC,IAAKZ,KAEP,iBAAKM,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAgCP,KAChC,eAAGM,UAAWC,EAAd,UAAoC,aACvBR,UAboBU,EAkBxC,OAGH,cAAGH,UAAWC,EAAd,SAA8B,mBAE/Bf,IAAa,SAACqB,EAAA,EAAD,QAIrB,C,uBClED,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpB,GAEP,YADAc,EAAOd,EAET,CAEImB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO1B,KAAKqB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["services/castApi.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'a961e99727987689b5a0d0e9241df951&language=en-US&page=1';\n\nasync function fetchCast(id) {\n  try {\n    const response = await fetch(`${URL}movie/${id}/credits?api_key=${KEY}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport default fetchCast;\n","// extracted by mini-css-extract-plugin\nexport default {\"foto_actor\":\"Cast_foto_actor__wlecR\",\"wrapper\":\"Cast_wrapper__XmIBi\",\"container\":\"Cast_container__iz+ye\",\"actor__list\":\"Cast_actor__list__f3kEW\",\"actor__item\":\"Cast_actor__item__8ltNV\",\"actor__box\":\"Cast_actor__box__KyyaK\",\"actor__name\":\"Cast_actor__name__JuIQ1\",\"actor__character\":\"Cast_actor__character__w4rc-\",\"span__text\":\"Cast_span__text__aGR6I\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport fetchCast from 'services/castApi';\nimport Loader from 'components/Loader/Loader';\nimport fotoAlternate from 'utilities/images/not-found.png';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const params = useParams();\n  const id = params.movieId;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetchCast(id)\n      .then(({ cast }) => {\n        cast.map(({ character, original_name, profile_path }) => ({\n          character,\n          original_name,\n          profile_path,\n        }));\n\n        setCast(cast);\n      })\n      .catch(error => toast.error(error.message, 'Something went wrong!'))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  return (\n    <div className={css.wrapper}>\n      <section className={css.container}>\n        {cast && cast.length > 0 ? (\n          <ul className={css.actor__list}>\n            {cast?.map(({ character, original_name, profile_path }, index) => {\n              return (\n                <li className={css.actor__item} key={index}>\n                  <img\n                    className={css.foto_actor}\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                        : fotoAlternate\n                    }\n                    alt={original_name}\n                  />\n                  <div className={css.actor__box}>\n                    <p className={css.actor__name}>{original_name}</p>\n                    <p className={css.actor__character}>\n                      Character:{character}\n                    </p>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p className={css.span__text}>Cast not found</p>\n        )}\n        {isLoading && <Loader />}\n      </section>\n    </div>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["URL","KEY","fetchCast","id","fetch","response","json","data","console","log","message","useState","cast","setCast","isLoading","setIsLoading","useParams","movieId","useEffect","then","map","character","original_name","profile_path","catch","error","toast","finally","className","css","length","index","src","fotoAlternate","alt","Loader","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}