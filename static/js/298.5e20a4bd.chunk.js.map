{"version":3,"file":"static/js/298.5e20a4bd.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCardDetails/MovieCardDetails.module.css?5a94","components/MovieCardDetails/MovieCardDetails.jsx","pages/MovieDetailsPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieCardDetails_wrapper__hB4sy\",\"container\":\"MovieCardDetails_container__spJiA\",\"btn__back\":\"MovieCardDetails_btn__back__33l2c\",\"card__container\":\"MovieCardDetails_card__container__Q-Ygg\",\"card__img\":\"MovieCardDetails_card__img__+eme3\",\"card__detaile\":\"MovieCardDetails_card__detaile__rmSm+\",\"box__title\":\"MovieCardDetails_box__title__sy9XU\",\"card__title\":\"MovieCardDetails_card__title__Mqd3L\",\"text__title\":\"MovieCardDetails_text__title__q1RM0\",\"text__detaile\":\"MovieCardDetails_text__detaile__VePsv\",\"card__list\":\"MovieCardDetails_card__list__bXiAR\",\"card__item\":\"MovieCardDetails_card__item__numq-\",\"container__info\":\"MovieCardDetails_container__info__4GeUk\",\"info__list\":\"MovieCardDetails_info__list__y90dP\",\"card__title__info\":\"MovieCardDetails_card__title__info__EPz-C\",\"active\":\"MovieCardDetails_active__9ZGRj\",\"navLink\":\"MovieCardDetails_navLink__CG3Ul\"};","import {\n  useParams,\n  NavLink,\n  Link,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport {fetchMovie} from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport fotoAlternate from 'utilities/images/meh2.png';\nimport css from './MovieCardDetails.module.css';\n\nconst MovieCardDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const params = useParams();\n  const id = params.movieId;\n\n  const activeClass = ({ isActive }) =>\n    isActive ? `${css.active}` : `${css.navLink}`;\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetchMovie(id)\n      .then(\n        ({\n          id,\n          genres,\n          overview,\n          poster_path,\n          original_title,\n          release_date,\n          vote_average,\n        }) => {\n          const movie = {\n            id,\n            genres,\n            overview,\n            release_date,\n            vote_average,\n            original_title,\n            poster_path,\n          };\n\n          return setMovie(movie);\n        }\n      )\n      .catch(error => toast.error(error.message, 'Something went wrong!'))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  return (\n    <>\n      <div className={css.wrapper}>\n        <section className={css.container}>\n          <Link\n            className={css.btn__back}\n            to={location?.state?.from ?? '/'\n            }\n          >\n            Back\n          </Link>\n          <div className={css.card__container}>\n            <img\n              className={css.card__img}\n              src={\n                movie?.poster_path\n                  ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                  : fotoAlternate\n              }\n              alt=\"\"\n            />\n            <div className={css.card__detaile}>\n              <div className={css.box__title}>\n                <h2 className={css.card__title}>\n                  {movie?.original_title\n                    ? movie.original_title\n                    : 'Movie without a title'}\n                </h2>\n                <p className={css.card__title}>\n                  ({movie?.release_date.slice(0, 4)})\n                </p>\n              </div>\n              <p className={css.text__title}>\n                Overview:\n                <span className={css.text__detaile}>{movie?.overview}</span>\n              </p>\n              <p className={css.text__title}>\n                User score: \n                <span className={css.text__detaile}>\n                  {Math.round(movie?.vote_average * 10)} %\n                </span>\n              </p>\n              <ul className={css.card__list}>\n                <span className={css.text__title}>Genres:</span>\n\n                {movie?.genres?.length > 0 &&\n                  movie.genres.map((genre, index) => (\n                    <li className={css.card__item} key={index}>\n                      <p>{genre.name}</p>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </div>\n        </section>\n        <section className={css.container__info}>\n          <h2 className={css.card__title__info}>Additional information</h2>\n          <ul className={css.info__list}>\n            <li>\n              <NavLink\n                className={activeClass}\n                to=\"cast\"\n                state={location?.state ?? '/'}\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                className={activeClass}\n                to=\"reviews\"\n                state={location?.state ?? '/'}\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </section>\n\n        {isLoading && <Loader />}\n      </div>\n    </>\n  );\n};\n\nexport default MovieCardDetails;\n","\nimport MovieCardDetails from 'components/MovieCardDetails/MovieCardDetails';\n\n\nconst MovieDetailsPage = () => {\n  return (\n    <>\n      <MovieCardDetails />\n      \n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'a961e99727987689b5a0d0e9241df951&language=en-US&page=1';\nconst FILTER = 'trending/movie/day';\n\nexport async function fetchTrending() {\n   const response = await fetch(`${URL}${FILTER}?api_key=${KEY}`);\n   if (response.ok) {\n    const data = await response.json();\n  return data;\n}}\n\nexport async function fetchMovie(id) {\n    const response = await fetch(`${URL}movie/${id}?api_key=${KEY}`);\n    if (response.ok) {\n      const data = await response.json();\n    return data;\n  }}\n   \n export async function fetchCast(id) {\n  \n      const response = await fetch(`${URL}movie/${id}/credits?api_key=${KEY}`);\n      if (response.ok) {\n        const data = await response.json();\n      return data;\n    }}\n  \n   export async function fetchReviews(id) {\n        const response = await fetch(`${URL}movie/${id}/reviews?api_key=${KEY}`);\n        if (response.ok) {\n          const data = await response.json();\n        return data;\n      }} \n\n\n    export  async function fetchSearchMovie(query) {\n          const response = await fetch(\n            `${URL}/search/movie?api_key=${KEY}&query=${query}`\n          );\n          if (response.ok) {\n            const data = await response.json();\n          return data;\n        } }\n      \n\n\n\n"],"names":["useState","movie","setMovie","isLoading","setIsLoading","id","useParams","movieId","activeClass","isActive","css","location","useLocation","useEffect","fetchMovie","then","genres","overview","poster_path","original_title","release_date","vote_average","catch","error","toast","message","finally","className","to","state","from","src","fotoAlternate","alt","slice","Math","round","length","map","genre","index","name","Suspense","fallback","Loader","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","KEY","FILTER","fetchTrending","fetch","response","ok","json","data","fetchCast","fetchReviews","fetchSearchMovie","query"],"sourceRoot":""}